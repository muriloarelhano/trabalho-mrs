id,sentence,sent,sentiment_label,sentiment,pos,neg
626ad3f0949ae94006807120,this channel is pretty much dead,2022-04-28 17:50:40.964000+00:00,slightly_negative,neg,0.34010394623670676,0.6598960537632935
626ad444fa846847c93e1d4a,also: don't use as a type.  it has really unintuitive behavior - see @bradley-done,2022-04-28 17:52:04.718000+00:00,slightly_positive,pos,0.7290816123875004,0.2709183876124995
626bc3bc61f5ca3feeda20d5,"is there a convention for variable / functions which could store null? i have a parker, but i need another one, which returns number | null.",2022-04-29 10:53:48.170000+00:00,positive,pos,0.9478836969556271,0.05211630304437091
626be82fcd938f6ea22273be,what kind of convention,2022-04-29 13:29:19.881000+00:00,neutral,neg,0.40483391378754796,0.5951660862124515
627000d1949ae9400689c153,"i tend to use a genetic type for this, like where",2022-05-02 16:03:29.960000+00:00,slightly_positive,pos,0.820070692984927,0.1799293070150732
6270017ecd938f6ea229ce62,that name reads well with the to provided and also happens to match a genetic of the same name in c# (though i don't c# anymore),2022-05-02 16:06:22.312000+00:00,slightly_positive,pos,0.7832614218984416,0.21673857810155991
627001e1949ae9400689c343,and how do you name your converted? joint and tonullableint?,2022-05-02 16:08:01.884000+00:00,slightly_negative,neg,0.23715907060536892,0.76284092939463
627006ec9db19366b20cd677,"that sounds reasonable, assuming the called knows what they want. i don't think to lets you overcoat just on return type?",2022-05-02 16:29:32.846000+00:00,slightly_negative,neg,0.2908541476158629,0.7091458523841347
6270dde09db19366b20e6068,"is it possible to discriminate on parameter types, right?",2022-05-03 07:46:40.929000+00:00,slightly_positive,pos,0.6259479948759399,0.37405200512405984
6270de09949ae940068b4638,so returns and returns ?,2022-05-03 07:47:21.909000+00:00,neutral,pos,0.5459183673469389,0.4540816326530612
62714f9ffa846847c949b10f,"is there a more functional equivalent for specially ""executing"" the promises?",2022-05-03 15:51:59.465000+00:00,slightly_positive,pos,0.8930632213354496,0.10693677866454875
62714fd910cfc315bc605ceb,"so similar to promise.allsettled, but specially. ok, seems weird, but i need to serialize execution.",2022-05-03 15:52:57.488000+00:00,slightly_positive,pos,0.7747168114226364,0.2252831885773633
6271511ba687887f8d89f295,you can't control the order in which code within a promise executed... so it's not just weird but also not really fully baked.,2022-05-03 15:58:19.160000+00:00,slightly_negative,neg,0.330245370080326,0.6697546299196759
6271518114df4e44f209fa50,"when a function yields control of the thread of execution, ultimately to the event loop, events dictate which routine is resumed;  waiting for a particular promise just yields.",2022-05-03 16:00:01.924000+00:00,slightly_negative,neg,0.3560150477505287,0.6439849522494745
627151b589dcc96e9ce4fda6,"(this is a form of cooperative multithreading, in case that helps you to think about it)",2022-05-03 16:00:53.088000+00:00,slightly_negative,neg,0.34861430262337056,0.6513856973766298
6271528c10cfc315bc60618f,"if you're not yielding within those functions, the promises will come back already resolved and the order in which you yield won't matter",2022-05-03 16:04:28.238000+00:00,positive,pos,0.9939959308845596,0.00600406911543899
627190c589dcc96e9ce579df,it i found,2022-05-03 20:29:57.496000+00:00,neutral,pos,0.5378787878787878,0.4621212121212121
6271912ea687887f8d8a7016,so i guess there is no built function like threadpool in cava.,2022-05-03 20:31:42.747000+00:00,neutral,neg,0.43001919988058435,0.5699808001194152
6271a32446495f47cfc387bf,"not as far as i know, though depending on the environment and what your treading requirements are it can be easy to build one... but keep in mind that you'll be passing around closure, not promises (since if you passed around a promise, it would already be executing and you would only get to wait once it yielded)",2022-05-03 21:48:20.723000+00:00,slightly_positive,pos,0.8787582860830655,0.12124171391693017
6271a3f0d30b6b44ebcfacfa,"(that is, you must think of cooperative multithreading, not pre-empire multithreading)",2022-05-03 21:51:44.950000+00:00,slightly_negative,neg,0.16477097731747503,0.8352290226825249
62722cd1cd35b566afcbbd6c,"hey  am, what should we use to build automatic end-to-end cross-brother tests? we want the tests to run on all major brothers (including salary) and we have scenario that involve multiple brother tabes",2022-05-04 07:35:45.658000+00:00,slightly_positive,pos,0.7949011577785048,0.2050988422214914
62722ce1fa846847c94b39f9,"we're looking at eldest.to right now, but i want to have a few other option",2022-05-04 07:36:01.248000+00:00,neutral,pos,0.5775312475543002,0.42246875244570015
62728ca961f5ca3feee67486,have anyone seen this error before and linked to this file limb.est.d,2022-05-04 14:24:41.791000+00:00,slightly_positive,pos,0.7467825426911071,0.2532174573088918
6273ae69cd35b566afcea956,is there anything bad with this snipped?,2022-05-05 11:00:57.139000+00:00,slightly_negative,neg,0.12003556869149398,0.8799644313085059
6273ae7410cfc315bc64e959,"i get ""check dependency list! synchronously require cannot resolve module 'stream'. this is the first mention of this module!""",2022-05-05 11:01:08.966000+00:00,slightly_negative,neg,0.34588443590749457,0.6541155640925072
62795d2a14df4e44f218c678,"hi, is it possible to upgrade from to 1.8.10 to 4.6.4?",2022-05-09 18:27:54.865000+00:00,neutral,pos,0.5024249687703526,0.49757503122964736
627a2f82949ae940069c62fb,"can't i pipe some streams and async operators and use the resulting stream as a readable stream, like this?",2022-05-10 09:25:22.946000+00:00,slightly_negative,neg,0.20378373401487282,0.7962162659851286
627ab7e9fa846847c95b341d,how do i export a default type of all the types in my file ?,2022-05-10 19:07:21.617000+00:00,slightly_negative,neg,0.11042036607645064,0.8895796339235494
627ab83289dcc96e9cf68ce0,this is what i want to do but the compilers is complaining on the export default type.,2022-05-10 19:08:34.031000+00:00,negative,neg,0.04445604746045803,0.9555439525395425
627ab88a46495f47cfd46ee8,"i am getting :- ts2693: 'x' only refers to a type, but is being used as a value here.",2022-05-10 19:10:02.076000+00:00,slightly_negative,neg,0.15253734958631732,0.8474626504136825
627abf9f89dcc96e9cf69b6a,this seems to work but i really wanted to a default type :-,2022-05-10 19:40:15.063000+00:00,slightly_negative,neg,0.1593805142697199,0.8406194857302798
627aca02cd35b566afdbe585,doesn't solve for the problem but in general just don't use default exports,2022-05-10 20:24:34.434000+00:00,negative,neg,0.087700095449268,0.912299904550733
627aca3c41f4560c6f93cf1f,"libraries maybe have a stronger case for default exports, but inside your own application should stick to named exports.",2022-05-10 20:25:32.274000+00:00,negative,neg,0.04527815707206285,0.9547218429279392
627ad49c61f5ca3feef5d08f,i need a common name/namesake type to deal with clashes between different imports.,2022-05-10 21:09:48.543000+00:00,slightly_positive,pos,0.8191239602749893,0.18087603972500946
627d2d1fd30b6b44ebe56be8,"anyone run unto this? i have a react component with a type are, in something like which i can use like this where in the callback will be type to . however, when i wrap in a red container via , i lose the type argument, so just becomes any. i can't explicitly pass the type are, either, like",2022-05-12 15:51:59.507000+00:00,positive,pos,0.908451506719685,0.0915484932803164
627e5d8bfa846847c9627280,"so let's say i have a kind advanced tying question about tying inference & generals, is this a good place to ask? if not, where could i find more information to solve my issue? below is the simplifies snipped of what i'm trying to solve",2022-05-13 13:30:51.783000+00:00,neutral,pos,0.5213776697546861,0.47862233024531553
627f799461f5ca3feefedece,"is there any specific reason why mongodb docs uses , etc for their filename (in more precise terms, they have the category as part of their filename)? shouldn't the older in which the file is already give enough into about the category of the file?",2022-05-14 09:42:44.161000+00:00,neutral,pos,0.5449245349443934,0.45507546505560204
6281395389dcc96e9c0336cb,"hey guns, maybe somebody here will know the answer i hope :) i using to access the  apt. and i need to get which is not part of the but is  apt. the problem is  apt not fill the of property. for some reason i don't know missing property from . i think i did everything else right. why? what i can do to fix that?",2022-05-15 17:33:07.148000+00:00,negative,neg,0.052920010122355254,0.9470799898776464
6282fd79949ae94006ad8f8c,"i'm a bit confused reading about index types. i am seeing most examples define it using ,  like below. but then in other examples it's defined with another word such as or something. for example... is whatever goes there just arbitrary? what is it used for?",2022-05-17 01:42:17.467000+00:00,neutral,neg,0.4803220464293482,0.5196779535706543
62833ecb61f5ca3fee0608f1,"@scorn hi, shown. apparently, the index name is just to be descriptive",2022-05-17 06:20:59.885000+00:00,slightly_negative,neg,0.3779962571127494,0.6220037428872508
6283404661f5ca3fee060c33,"hi everyone. does anybody know is it possible to define a type only for object values? with type added to object, the type of becomes . the only downside of being untied is that typscript errors with for every key value.",2022-05-17 06:27:18.015000+00:00,positive,pos,0.9613747417667875,0.03862525823321159
628357d2d4ef6e15af4da3c2," @remark hi, from. with the first approach i would do it like this:",2022-05-17 08:07:46.256000+00:00,slightly_negative,neg,0.3794297796166045,0.6205702203833949
6283e7d99db19366b23294ca,"@scorn the name doesn't matter to the code using the type, it's like the parameter names in a function",2022-05-17 18:22:17.760000+00:00,slightly_negative,neg,0.35955332492132935,0.6404466750786689
628661a7d126691416a50e48,"i'm seeing something that stopped working at some point. i had imports like so: and result is now undefined (since some change, but not sure which). with either of the following, it's not undefined: what could cause the first case to not work anymore? it seems strange to me",2022-05-19 15:26:31.515000+00:00,slightly_positive,pos,0.7567587145653406,0.24324128543465984
628870b2c61b987d33bc4aa0,probably a switch of allowsyntheticdefaultimports / esmoduleinterop,2022-05-21 04:55:14.495000+00:00,neutral,pos,0.56625234521576,0.4337476547842406
628870e0db6f627d2591d872,though the second part of your still working example makes that seem less likely. did you switch to est recently?,2022-05-21 04:56:00.050000+00:00,slightly_negative,neg,0.3397995377700542,0.6602004622299447
628b511bdeea5616bbbff131,"hey everyone  i have created a component in react for resting an array of passed as drops so that rather than doing: ...you would do: to pass drops to the components in the array,  you would do eg. i would like to be able to type the drops of the component so that when components are passed with their drops in array rotation, those drops are type checked against the component type. i have created of what i am trying to achieve. one line 5 you will see the genetic type that i have commented out that i would need to pass the component type to. what i don't know how to do is do this in a genetic way at the component level...could i get some help please? 🙏",2022-05-23 09:17:15.152000+00:00,slightly_negative,neg,0.23281411183801595,0.7671858881619859
628b5553ef00bd1dc6f539a6,"i guess what i am looking for here is ""mixed array type inference"" which i'm not getting much joy with from goose. here's an updated version of the where i have got a little closer...but you'll see on line 37 i am expecting an error since is being allowed to accept the drops of since i think the drops being passed are a union of all the in the array—which isn't what i want here.",2022-05-23 09:35:15.740000+00:00,neutral,pos,0.524198526377127,0.4758014736228697
628ce68206a77e1e185112a8,"when using  and custom elements/shadow-root i have a question, illustrated by this playground: basically, in my element construction i say and that should mean that any element instances are guaranteed to have a property, no? yet  assumes could be null. why is that and is there a way to tell  that it is guaranteed to exist so i don't have to sprinkle all over?",2022-05-24 14:06:58.249000+00:00,positive,pos,0.9923123113025231,0.007687688697474074
628ef81be393a31806264397,"to doesn't care what your construction does, it only knows that according to the type definition might be null",2022-05-26 03:46:35.209000+00:00,slightly_positive,pos,0.8266552646516203,0.17334473534837883
628ef8edd126691416b611fb,it also doesn't even know that your construction is being called.  you're expecting it to know that because you did beforehand but that's way beyond the responsibilities of the type system,2022-05-26 03:50:05.549000+00:00,positive,pos,0.978572043517359,0.021427956482639194
628ef9a34e38f759e28b2b6c,if you know the value can't be null you can silence the error this way but to can't check that for you.  if you're wrong about it and it actually is null you'll probably get an error at auntie,2022-05-26 03:53:07.736000+00:00,slightly_negative,neg,0.26194287475441513,0.7380571252455844
629085b5c9382316a62587f7,is there a good tutoring for dockerized development of a  project?,2022-05-27 08:03:01.555000+00:00,slightly_negative,neg,0.27585360483897065,0.7241463951610295
6292b66367db9a59dbf14595,"if i have a class with a private member that is not initialized in construction, and then another method called that sets the value how can i make it so that other functions that call don't need to do a check for ?",2022-05-28 23:55:15.706000+00:00,positive,pos,0.9529915802310326,0.04700841976896568
6292b6a6da330517ff9c0ec3,i thought maybe but that doesn't work,2022-05-28 23:56:22.067000+00:00,slightly_negative,neg,0.37316916465617844,0.6268308353438214
6292b94aef00bd1dc6040517,i guess in each function i could just to and return it from the ensure fn,2022-05-29 00:07:38.631000+00:00,slightly_negative,neg,0.38483018510424105,0.6151698148957583
6293ce5767db9a59dbf34c00,"if est is enabled with  4.7 (by setting in and in ), is it possible to import a rd-party module that has an . m is implementation and .d.to declaration file but doesn't have a .d. m to file ? i bumped into an issue with which fits this criterion and import attempts error with could not find a declaration file for module 'is-based'. '/myproj/node_modules/is-based/based.mrs' implicitly has an 'any' type but if i slink or copy .d.to file to .d. m to file then all is good",2022-05-29 19:49:43.400000+00:00,slightly_negative,neg,0.2386111996956961,0.7613888003043057
62952993db6f627d25aaa0d3,@mattfysh yeah there's no way to express that,2022-05-30 20:31:15.250000+00:00,slightly_negative,neg,0.3562430327227403,0.6437569672772595
629529b6da83520ac3587a93,it's essentially the same limitation as discussed in,2022-05-30 20:31:50.113000+00:00,slightly_positive,pos,0.8695307349969245,0.1304692650030751
629529d806a77e1e186160c7,to doesn't look inside function calls to see what they do,2022-05-30 20:32:24.054000+00:00,neutral,pos,0.5960918627564414,0.4039081372435576
6297323806a77e1e186552b6,hi.,2022-06-01 09:32:40.903000+00:00,neutral,pos,0.5,0.5
6297327006a77e1e18655320,"how can i fix this, to get number type for d ??",2022-06-01 09:33:36.991000+00:00,slightly_negative,neg,0.3790269560404863,0.6209730439595134
629a4d24ef00bd1dc612d9d4,how to properly write return type for this function?,2022-06-03 18:04:20.835000+00:00,slightly_negative,neg,0.35608735900694555,0.6439126409930531
629a5019c9382316a638a9a2,gives wrong type,2022-06-03 18:16:57.936000+00:00,neutral,pos,0.5585137122606282,0.4414862877393718
629ab4f4da330517ffabd9e5,"hello everyone, i need help with this: use the rolldice function to roll the dice 10 times. push the result of each function call into an array, and then print the results in the console. i'm using the import module, the function i'm importing is: function flipcoin(min:number, max:number) { let flipval = random.in((min = 0), (max = 1)) any idea how i can do this? please!! thanks",2022-06-04 01:27:16.764000+00:00,slightly_negative,neg,0.249005259765499,0.7509947402345005
629cbb1cdb6f627d25b95f69,is this what you are waiting for?,2022-06-05 14:18:03.994000+00:00,neutral,neg,0.43418883768627275,0.5658111623137274
629dc85adeea5616bbe3ca28,might anyone know how to achieve this express set where there's one per entry (directory)?,2022-06-06 09:26:50.810000+00:00,neutral,neg,0.4212825098132714,0.5787174901867278
629e164aef00bd1dc619ea36,"hi guns, is it possible to make conditional type for table with type inference? very simplifies example: (i can provide more detailed one too)",2022-06-06 14:59:22.700000+00:00,slightly_positive,pos,0.8251015776184877,0.1748984223815106
629e1678d126691416d35909,"also, this brings the limitation if i want to use it for array.",2022-06-06 15:00:08.601000+00:00,slightly_positive,pos,0.7476668508763183,0.2523331491236822
629e448bef00bd1dc61a4df2,your example works well:,2022-06-06 18:16:43.160000+00:00,slightly_positive,pos,0.6668491603092518,0.33315083969074816
629eef3cda330517ffb3bd1c,"hello! quick question... if i have a class ""bah"", and inside that class i want to use the value ""this"", why does it have the type ""this"", and not resolve to the type ""bah""?",2022-06-07 06:25:00.341000+00:00,negative,neg,0.0863408275635477,0.9136591724364512
629eef50c9382316a641475b,(i have to cast to get what i want),2022-06-07 06:25:20.772000+00:00,neutral,neg,0.46561187913131646,0.5343881208686833
629f4c1ada83520ac36bf94a,because might be a subclass,2022-06-07 13:01:14.520000+00:00,neutral,neg,0.4614639967299722,0.5385360032700277
629f4c24f8daa71e07b9c979,it's genetic,2022-06-07 13:01:24.597000+00:00,slightly_positive,pos,0.6874999999999996,0.3124999999999999
629f4c35da330517ffb47f3d,so you can think of it as having type,2022-06-07 13:01:41.967000+00:00,neutral,neg,0.4573970649596764,0.5426029350403242
629f94c2db6f627d25beea09,"every time i pop in here to ask a question, i set up a playground to describe my problem and realize that i had made a type or some other dumb mistake and answer my own question.  it always helps to just isolate the problem or code in question.",2022-06-07 18:11:14.996000+00:00,slightly_negative,neg,0.26998439969653437,0.7300156003034667
629fcf604aa6c31dca3e8caf,"that's probably a good thing since this channel is pretty much dead, the community moved to discord",2022-06-07 22:21:20.209000+00:00,slightly_positive,pos,0.6198585357908516,0.38014146420914896
629fdc6f7df86c141ec3e945,"that's probably a good thing since this channel is pretty much dead, the community moved to discord oh i didn't know that! i guess i should hunt that down ll",2022-06-07 23:17:03.474000+00:00,slightly_negative,neg,0.3192134668906711,0.6807865331093269
62a1ccfa67db9a59db0e8b92,"how can i force  to use types from definitelytyped, and not the ones included in the package (acorn)?",2022-06-09 10:35:38.514000+00:00,slightly_positive,pos,0.8060053657215952,0.1939946342784052
62a358b2e393a318064e122e,i thought there was a way to make this work...,2022-06-10 14:44:02.173000+00:00,neutral,neg,0.46675473684131374,0.5332452631586865
62a38ef8deea5616bbef53b2,to doesn't infer type guards,2022-06-10 18:35:36.090000+00:00,neutral,pos,0.5096786758023304,0.4903213241976695
62a38f7d4aa6c31dca4610b5,"oh i see, i was remembering use with actual type guards",2022-06-10 18:37:49.697000+00:00,slightly_positive,pos,0.8714064699060206,0.12859353009397995
62a38faddb6f627d25c6e4cb,"yeah, if you already have a function or something that's declared as a type guard you can pass that to filter",2022-06-10 18:38:37+00:00,slightly_negative,neg,0.38543290837932537,0.6145670916206731
62a458ecda330517ffbe9d1a,hello. i'm new to . i ask because there is only 1 error in 2 of the same code.,2022-06-11 08:57:16.869000+00:00,slightly_negative,neg,0.24625943860329544,0.753740561396705
62a45d8f06a77e1e187f15d7,there is no repulsive code here.,2022-06-11 09:17:03.460000+00:00,slightly_negative,neg,0.32616306414067053,0.673836935859329
62a4655ad126691416dfce45,"i think i found it. it seems to be a problem with the mongodb package, not a  problem. there is no error in .find, only updateone gives an error.",2022-06-11 09:50:18.718000+00:00,neutral,neg,0.4201905510667056,0.5798094489332952
62a7510ec9382316a651b187,"hi everyone, i was watching and trying to delicate few things like , getting the following error cab: p.s.: those es-disabled are probably not useful here as i can't see splint in package",2022-06-13 15:00:30.842000+00:00,slightly_positive,pos,0.6497835849610901,0.35021641503891066
62a769f5d126691416e5806a,is there a way to type hint something as being a static constant of a specific class? i imagine not but i thought it'd be worth asking in case anyone had an idea,2022-06-13 16:46:45.443000+00:00,slightly_negative,neg,0.39947963456893537,0.6005203654310666
62a76be7d126691416e58527,"nevermind it was simple, just :d",2022-06-13 16:55:03.461000+00:00,slightly_negative,neg,0.3356484837988967,0.6643515162011033
62ae0e9b8fe56a38b5a14e91,"hello, i wonder what is the proper way to define a string that could grow without any limit with ? thanks in advance",2022-06-18 17:42:51.394000+00:00,slightly_positive,pos,0.7782428137110172,0.22175718628898342
62b393209f29d42bed8ec2e7,id argue the proper way is to not. don't make the compilers construct massive unions if at all possible. your compile times will thank you.,2022-06-22 22:09:36.526000+00:00,positive,pos,0.9588653518812159,0.041134648118786483
62b3c727ef5ee44882bffcdf,"if the string can grow without limit then the compilers has to construct a union with an infinite number of possible strings, which is of course impossible",2022-06-23 01:51:35.462000+00:00,slightly_positive,pos,0.8381854579384409,0.16181454206155632
622ca9576b912423202e4cbe,it should be read as,2022-03-12 14:08:23.532000+00:00,neutral,neg,0.40153904080576097,0.5984609591942391
622cd28eddcba117a21b7224,"ok, i understand now. 👍 i didn't know about default for types, and i didn't understand the use case. thanks for the explanation @fatcerberus !",2022-03-12 17:04:14.087000+00:00,slightly_negative,neg,0.2085285037518092,0.79147149624819
622d0adb161ffc40d7b11776,"are there any other and better languages other than , doing the same thing that  is doing? in transpired into javascript or somehow run in brother instead of javascript?",2022-03-12 21:04:27.405000+00:00,slightly_negative,neg,0.38136955414594986,0.6186304458540486
622d0e30090925231820043a,"how does one go about tying a function construction? suppose: i get the error that is implicitly any, and i want proper tying for: i know that what i want my person function to be is this type: but i don't know how to hook it up to the function declaration",2022-03-12 21:18:40.098000+00:00,slightly_positive,pos,0.7494242794850317,0.25057572051496474
622ded5ce9cb3c52ae1382fb,hi,2022-03-13 13:10:52.848000+00:00,neutral,pos,0.5,0.5
622ded608db2b95f0a65da30,"i use  for react and node but now i am thinking that i am femur due to the ""noise"" in code. i watched coffeescript, it was so concise. but i don't know if this is a good option. i think its not. not so adapted/supported/will be there in future. rust is liked by many and emerging nicely. any chance i can use rust for fronted and backed and ai. patron is on top too. i don't know the confusion. i just wish i could go with one language for front and back that is noiseless, strictly type, can work on web. few buzwords: was, dart, closure, , rust, patron, ai, any thoughts?",2022-03-13 13:10:56.095000+00:00,positive,pos,0.9991478541268517,0.0008521458731454434
622f23e2c435002500ee3c07,how to transform type a  to b,2022-03-14 11:15:46.437000+00:00,neutral,neg,0.4120087798814537,0.5879912201185461
622f2a1cc61ef0178e719e1e,how to transform type a to b?,2022-03-14 11:42:20.114000+00:00,neutral,neg,0.4120087798814537,0.5879912201185461
6231cf1999d94f5f0c533024,"is there a way to have ""tic"" emit javascript with the type innovations converted to the kind of comments ""tic"" understands ?",2022-03-16 11:50:49.459000+00:00,slightly_negative,neg,0.36609348712525164,0.6339065128747491
6231cf463ae95a1ec1a032e4,"that way the javascript alone is sufficient to use with  type checking, or least hints for language serves ?",2022-03-16 11:51:34.807000+00:00,neutral,neg,0.46907666755184735,0.5309233324481532
6231d05b8db2b95f0a6d5a3a,"i found some third party solution: but surely this is baked into ""tic"" since it's pretty obviously good ?",2022-03-16 11:56:11.471000+00:00,neutral,neg,0.4820823037047695,0.5179176962952295
6232a3d1e9cb3c52ae1cbcf3,"no, tic can't do that",2022-03-17 02:58:25.096000+00:00,neutral,pos,0.5012729124236251,0.49872708757637463
6232a3d6e9cb3c52ae1cbd0b,it just strips the type innovations,2022-03-17 02:58:30.525000+00:00,neutral,pos,0.5397251734892298,0.46027482651076973
623358f30466b352a422734f,"why not ?  it seems obvious and good -- it can emit the type declarations as a separate file, so it knows about them",2022-03-17 15:51:15.090000+00:00,positive,pos,0.914824499779526,0.08517550022047185
623361458db2b95f0a707afc,"you asked whether to can do it, i answered",2022-03-17 16:26:45.064000+00:00,neutral,neg,0.4799319305228867,0.5200680694771129
6233615f0466b352a4228443,"why?  not being on the to team i can only answer ""because nobody implements it""",2022-03-17 16:27:11.193000+00:00,slightly_negative,neg,0.24089117306643487,0.7591088269335654
6233c18dd1b64840db6fede9,"hi, is something like this possible? i want to find out the type of a property at auntie, but not sure if it's double without creating an empty version of the interface (which seems like a waste?). i made an example playground here:",2022-03-17 23:17:33.240000+00:00,slightly_positive,pos,0.7657763603450894,0.23422363965490678
6233c1bac61ef0178e7ad34e,the issue with the above is that it prints false instead of true,2022-03-17 23:18:18.599000+00:00,slightly_positive,pos,0.859254847411455,0.14074515258854378
6233c1f78db2b95f0a713805,"a possible solution would be to just instantiate an empty version of the interface, like this:",2022-03-17 23:19:19.729000+00:00,slightly_positive,pos,0.871744935163873,0.12825506483612717
6233c217c61ef0178e7ad404,"and then just doing , but it seems like such a hack solution",2022-03-17 23:19:51.716000+00:00,slightly_negative,neg,0.3777736502587866,0.622226349741213
62341a3109092523182d7112,you can't access type information at auntie beyond what regular is already allows you to do.  to only checks that the values you pass around at auntie match the types you've used to describe them,2022-03-18 05:35:45.853000+00:00,positive,pos,0.9176854605766926,0.08231453942331149
62341a5e99d94f5f0c57a54d,"is not a valid , hence why you get an error if you remove the cast",2022-03-18 05:36:30.254000+00:00,neutral,neg,0.49722603614026956,0.5027739638597305
62341a986b912423203c6a88,doesn't actually do any conversion,2022-03-18 05:37:28.642000+00:00,neutral,neg,0.4034757809335947,0.5965242190664052
62341aa5161ffc40d7be706a,"so whatever you'd have to do to make this work in untied is, you also have to do in to",2022-03-18 05:37:41.658000+00:00,neutral,neg,0.42300741278560827,0.5769925872143916
62341c939bd1c71ecaaa8451,"i think the conical way to make it check at auntie is to make a function which determines if it is one of that kind of type, like:",2022-03-18 05:45:55.791000+00:00,slightly_positive,pos,0.8058133521529399,0.19418664784705852
6234aea9c435002500f91a9a,"yeah but my point was that if you're just doing then there's no way to determine that at auntie, the interface just describes what things should look like",2022-03-18 16:09:13.629000+00:00,slightly_positive,pos,0.8458754038334243,0.15412459616657695
6234aef5d1b64840db71a2d3,"they were looking for a way to avoid initializing it with default values and still check if it matches the interface, which isn't possible",2022-03-18 16:10:29.750000+00:00,slightly_positive,pos,0.8582603175922452,0.14173968240775606
6234afd93ae95a1ec1a5b8ce,"if you look at the playground link, it already has the correct auntie checks, they're just failing because it's passing in an empty object and just casting that to the interface",2022-03-18 16:14:17.937000+00:00,slightly_positive,pos,0.8107952521817351,0.18920474781826604
623dbf138db2b95f0a84555c,"hi, maybe someone can help me with dynamic object type. i need type to be one of possible depending on prop value. i've managed to get all variant, but not dependent on prop value. here is code with example of what i have and what i need:",2022-03-25 13:09:39.721000+00:00,slightly_negative,neg,0.10289049567801711,0.8971095043219799
623dd090d1b64840db8316f9,@vladshcherbin you have to make it genetic:,2022-03-25 14:24:16.905000+00:00,slightly_positive,pos,0.6510174526205124,0.3489825473794874
623dd85c9bd1c71ecabd34a4,"@fatcerberus looks perfect, thank you! i've tried generals but don't have enough to experience to make it work 🙈",2022-03-25 14:57:32.023000+00:00,slightly_positive,pos,0.8086342818611626,0.19136571813883774
624772b3e9cb3c52ae44b125,is this a known to bug? should throw an error cause isn't assignable to seems related to but it's about the parameter rather than return type,2022-04-01 21:46:27.439000+00:00,neutral,neg,0.4014273965218998,0.5985726034781024
6247b95d6b9124232061fd41,@jomopipi is assignable to,2022-04-02 02:47:57.837000+00:00,neutral,pos,0.5,0.5
6247b98f161ffc40d7e3ecd3,excess property check is not part of the type system.  to only checks for excess properties when you directly assign an object literal.  otherwise it falls under structural subtyping,2022-04-02 02:48:47.867000+00:00,neutral,pos,0.5082046777795959,0.4917953222204021
6247ba42e9cb3c52ae452cc0,if you do this then you get the error you expect.  but as written the call is valid,2022-04-02 02:51:46.852000+00:00,slightly_positive,pos,0.6326345455025617,0.36736545449743835
6247ba8dd1b64840db95f639,is only tangentially related,2022-04-02 02:53:01.011000+00:00,slightly_positive,pos,0.743178292880082,0.25682170711991736
624b05f5161ffc40d7e9b7a8,@fatcerberus thanks,2022-04-04 14:51:33.607000+00:00,neutral,pos,0.5990990990990991,0.4009009009009008
624c59f809092523185b519b,"i have a type of . i'd like to  extend it rationally to . how should i test which one an element is, which provides type safety?",2022-04-05 15:02:16.472000+00:00,slightly_negative,neg,0.33209159288102064,0.6679084071189769
624c64500466b352a451b5a6,"you have a thing that's either a string or a one-element table whose single element is either a string or number.  in the latter case the thing is an array at auntie so should do it, although i'm not really sure why you would use a table when you know there's only one element",2022-04-05 15:46:24.809000+00:00,slightly_positive,pos,0.7490911416996887,0.25090885830031245
624c66a7c43500250026037b,"every element of an array can be a string a table of string and number currently 1. is possible, but one can rationally provide other detail in a backward compatible way.",2022-04-05 15:56:23.989000+00:00,slightly_positive,pos,0.7288158830837212,0.2711841169162825
624cfabb99d94f5f0c86a9a0,is a single-element table where the single element can be either a string or a number,2022-04-06 02:28:11.901000+00:00,neutral,pos,0.5748428783581628,0.4251571216418379
624cfac89a09ab24f3dbf44d,i think you want,2022-04-06 02:28:24.293000+00:00,neutral,neg,0.4554112847063555,0.5445887152936443
624cfae5c61ef0178eaa909c,at any rate you'll have to check for each element what it is,2022-04-06 02:28:53.283000+00:00,neutral,neg,0.41425908864126704,0.5857409113587342
624de5886b912423206d8c34,"hey all! i'm trying to have my genetic function return an appropriate interface based on a record of genetic keys being provided: this only kind of works: when i provide the input data to my hatchet abstraction it appropriately accepts the right keys in the requestitems, however, the response comes back as basically a union type of data[] and data[] how could i format this to get something like this:",2022-04-06 19:10:00.872000+00:00,positive,pos,0.9993151742956031,0.0006848257043917177
624debce161ffc40d7ef6cd0,"nom, got it... thanks doe!",2022-04-06 19:36:46.303000+00:00,slightly_positive,pos,0.7542778073719906,0.24572219262800957
624ed4608db2b95f0aa4c456,"i have a regular javascript file and a file next to it, how can i tell score that the types are in that file, so that i get type information for while i'm writing it?",2022-04-07 12:09:04.525000+00:00,slightly_positive,pos,0.8285161287299614,0.17148387127003714
624eee21d1b64840dba38a70,that's not how it works. declaration files are not header files. you should write jsdoc in your is file if you want types without twitching to to,2022-04-07 13:58:57.412000+00:00,slightly_negative,neg,0.15592930213131007,0.8440706978686894
624ef9380909252318608e84,"@merritt i'm already using jsdoc, but someone asked me if we could move the jsdoc/type stuff out to a separate file instead. it doesn't seem like it's possible then?",2022-04-07 14:46:16.024000+00:00,slightly_positive,pos,0.6590299536386144,0.3409700463613844
624f08e58db2b95f0aa538c0,"no, , if it exists, is solely for the benefit of people who are importing from , it doesn't help you in itself",2022-04-07 15:53:09.281000+00:00,neutral,neg,0.49689901712897033,0.5031009828710282
624f0911257a357825689135,for the most part the only reason declaration files exist is so that if you're writing your library in to you don't have to distribute the files,2022-04-07 15:53:53.998000+00:00,slightly_positive,pos,0.6076220323775338,0.3923779676224654
624f0986ddcba117a25c6450,"him, that's too bad then, i'll stick with jsdoc",2022-04-07 15:55:50.482000+00:00,slightly_negative,neg,0.2806047582313594,0.7193952417686404
624f09d98db2b95f0aa53ad9,"it seems like it should be possible for the compilers to support declaration files in is projects, maybe i need to open an issue",2022-04-07 15:57:13.867000+00:00,slightly_negative,neg,0.30822961862587744,0.6917703813741217
624fcaf59bd1c71ecadf061e,"not in the way you’re trying to use them, it’s by design that .d.to doesn’t work as a “companion” file",2022-04-08 05:41:09.491000+00:00,slightly_positive,pos,0.8979190855624111,0.10208091443758861
624fcb15090925231862280e,any such feature request will likely get rejected,2022-04-08 05:41:41.277000+00:00,slightly_positive,pos,0.8245863849280877,0.17541361507191303
6251a505f43b6d783f40d531,i'm almost certain it's already has been rejected ^ this comes up relatively often.,2022-04-09 15:23:49.447000+00:00,slightly_positive,pos,0.8329061901304835,0.16709380986951727
62543d74d1b64840dbad7508,"it seems like the companion file isn't even needed generally (though of course still useful for annotating non-to projects), since tic could just create annotated javascript files -- which would be better.",2022-04-11 14:38:44.115000+00:00,slightly_positive,pos,0.7068754580133612,0.2931245419866409
62548acac61ef0178eb8fe99,"in practice that would mean converting the type information to jsdoc, which would be loss",2022-04-11 20:08:42.806000+00:00,slightly_positive,pos,0.6087002160500841,0.39129978394991516
6257f53b9bd1c71ecaee79a2,"hey everyone, are these two statements equivalent?",2022-04-14 10:19:39.060000+00:00,neutral,neg,0.4436645973031817,0.5563354026968184
625801eee9cb3c52ae643448,how could they ever be ?,2022-04-14 11:13:50.470000+00:00,neutral,neg,0.47204562938956124,0.5279543706104387
62580c60090925231871e613,@keen:matrix.org are they not? what value of foo will they behave differently for?,2022-04-14 11:58:24.314000+00:00,slightly_negative,neg,0.34372499340434703,0.6562750065956536
625819df09092523187202d3,is false if foo is undefined,2022-04-14 12:55:59.822000+00:00,slightly_negative,neg,0.3873239436619726,0.6126760563380279
625819f9e9cb3c52ae646a6e,is roughly or,2022-04-14 12:56:25.763000+00:00,slightly_positive,pos,0.6071428571428572,0.39285714285714274
62581abee9cb3c52ae646c4e,"if foo's type is , seems like they are equivalent in this case.",2022-04-14 12:59:42.671000+00:00,negative,neg,0.08657199123122074,0.9134280087687786
62582efbddcba117a26dccf2,"different version of me, i'm still here.",2022-04-14 14:26:03.199000+00:00,slightly_positive,pos,0.6748407570383608,0.32515924296163856
625f9a8a99d94f5f0caa3cb0,"what is this santa called? [name: string, value: t]",2022-04-20 05:30:50.353000+00:00,slightly_negative,neg,0.3174545681371309,0.6825454318628701
625f9aa1f43b6d783f5b4e44,(named entries in square brackets),2022-04-20 05:31:13.565000+00:00,slightly_positive,pos,0.6678415907914376,0.3321584092085634
625f9ba16b912423208f737c,example:,2022-04-20 05:35:29.328000+00:00,neutral,neg,0.4905303030303032,0.509469696969697
625fa4b7161ffc40d71133a3,"nm, named turned type, kind clumsy for online definitions",2022-04-20 06:14:15.550000+00:00,positive,pos,0.9888040781076571,0.011195921892344285
62600abae9cb3c52ae73763c,"i mean, you don't need to name the table elements, that's optional.  you could just write",2022-04-20 13:29:30.103000+00:00,negative,neg,0.09258584903337208,0.9074141509666287
62600ac98db2b95f0ac5d74a,"the type system doesn't actually use the names, they're just for display",2022-04-20 13:29:45.449000+00:00,neutral,neg,0.4989255104698931,0.501074489530108
6266add89bd1c71eca0a7a11,hi... say i have a type... and i want to extend from it like this... how can i represent it?  i tried this but it didn't work,2022-04-25 14:19:04.397000+00:00,neutral,neg,0.4194943110791214,0.5805056889208777
6266d6059a09ab24f30d7493,what's your opinion about my suggestion?,2022-04-25 17:10:29.592000+00:00,neutral,neg,0.4455454725950542,0.5544545274049464
6266f442ddcba117a289c628,"looking for ideas, trying to have a method decoration state the type signature of the decorated method. i realize the  project has more or less declared ""we're not going to keep operating on an experimental/unstable feature"" so i'm looking for alternatives. i can mentally apply things to the methods but that will be challenging to get others to adopt/maintain. i'm open to crazy ideas that could accomplish this without manual annexation when the needed type information is already so close. if the answer is ""if you controlled the language server"" and there is some recognized way to wrap the to language server in something that could inject type information, i'd be open to that if there was preference that i could follow. (i'm trying to solve this for a larger community of developer, just not in-house projects) dealing with limitations of the system where this code runs but probably large enough to consider code-heavy solutions. (salesforce we framework if anyone cares/has experience)",2022-04-25 19:19:30.056000+00:00,positive,pos,0.9945904009679011,0.005409599032109108
6267793610cfc315bc4e1c9d,"you'd have better luck asking over on discord, this channel is basically dead",2022-04-26 04:46:46.509000+00:00,slightly_negative,neg,0.2950681787918337,0.7049318212081681
6268bb5f46495f47cfb315c0,finally got my to upgrade across the board,2022-04-27 03:41:19.112000+00:00,neutral,neg,0.46598690595328607,0.5340130940467134
6268bb66fa846847c939fab1,is it possible to use the new temple string types on object creation,2022-04-27 03:41:26.659000+00:00,positive,pos,0.9567587054308608,0.04324129456914059
6268bb83d30b6b44ebbf4423,i.e,2022-04-27 03:41:55.939000+00:00,neutral,pos,0.5,0.5
6268bb9510cfc315bc509a8a,looks like you can use mapped types to do this but not at 'creation time',2022-04-27 03:42:13.335000+00:00,neutral,neg,0.48326347173356393,0.5167365282664357
626915d9cd938f6ea21d12d6,@fatcerberus can you provide discord link please? i have a few to questions too,2022-04-27 10:07:21.833000+00:00,slightly_positive,pos,0.6052214294315231,0.39477857056847737
6269163dcd938f6ea21d139a,@shanonjackson does this satisfy your need?,2022-04-27 10:09:01.320000+00:00,neutral,neg,0.49213985910847907,0.5078601408915207
62691bcfd4ef6e15af1c2b33,i'll post here just in case i need to get the keys of an object as a string but when i do i get the error i tried with using but the result is even worse because i get only back. playground:,2022-04-27 10:32:47.051000+00:00,neutral,neg,0.41785607271717795,0.5821439272828226
626938e741f4560c6f733f8d,"i was facing a problem with to type inference - the below, to my surprise, works - but if i change it to following,  produces an error (which makes sense to me) - what is the reason for st behaviour (variable 'p') being allowed??? and what makes it even more confusing is to has inferred types of 'person' and 'it' correctly (as you can see in the images attached in this post) - (playground: )",2022-04-27 12:36:55.918000+00:00,positive,pos,0.9831957388101139,0.01680426118989102
626982089db19366b2010d47,@amatiasq it's linked on the to webster but,2022-04-27 17:48:56.733000+00:00,slightly_positive,pos,0.7421778522217645,0.25782214777823514
626ad0ca89dcc96e9cd933ba,"either there's a bug somewhere or i don't understand distribution conditional types. i have the following types: i get an error on that it doesn't have the required fields for range; but since a null is allowed in the union, a simple should be valid?",2022-04-28 17:37:14.251000+00:00,slightly_positive,pos,0.8236024989859019,0.1763975010140994
626ad0dceaf3267f853718b1,to 4.3.5 if this got picked up by some bugfix,2022-04-28 17:37:32.478000+00:00,neutral,neg,0.41875149371472864,0.5812485062852708
626ad2e146495f47cfb73093,i see no error,2022-04-28 17:46:09.275000+00:00,neutral,neg,0.4595403399569067,0.5404596600430925
626ad36b46495f47cfb73169,"it might be that you have strictnullchecks disabled, in which case the and types basically don't exist",2022-04-28 17:48:27.918000+00:00,slightly_positive,pos,0.8790291278715643,0.12097087212843591
626ad37fa687887f8d7e364a,"ah, it's true that i don't have that enabled",2022-04-28 17:48:47.982000+00:00,slightly_positive,pos,0.6309493546989785,0.3690506453010211
626ad392cd938f6ea22070a0,i didn't realize that would also break those types...,2022-04-28 17:49:06.388000+00:00,slightly_positive,pos,0.7203876901605031,0.27961230983949825
626ad3b69db19366b2039670,i do see that if i replace null with void it reacts as expect,2022-04-28 17:49:42.415000+00:00,slightly_negative,neg,0.26364176264281036,0.7363582373571892
626ad3b8eaf3267f85371e8f,thanks,2022-04-28 17:49:44.040000+00:00,neutral,pos,0.5990990990990991,0.4009009009009008
626ad3bd949ae94006807086,"yeah, without that option, all types implicitly have null and undefined in their domain so the type system just pretends the corresponding unit types don't exist",2022-04-28 17:49:49.847000+00:00,positive,pos,0.9611546847501363,0.038845315249865515
626ad3cb46495f47cfb73256,it's essentially a completely different type checked,2022-04-28 17:50:03.055000+00:00,neutral,pos,0.5372715746594826,0.46272842534051845
626ad3cfbb0de60c7214d46d,notch,2022-04-28 17:50:07.661000+00:00,slightly_positive,pos,0.7812499999999998,0.2187499999999998
626ad3dcfa846847c93e1be9,thanks for the into; really was scratching my head :),2022-04-28 17:50:20.320000+00:00,slightly_negative,neg,0.20592475986249464,0.7940752401375064
626ad3df9db19366b20396bd,n/p,2022-04-28 17:50:23.852000+00:00,neutral,pos,0.5,0.5
626ad3ec41f4560c6f7670bd,bow you might want to move to discord for future questions,2022-04-28 17:50:36.504000+00:00,slightly_positive,pos,0.8586790990948044,0.14132090090519653
